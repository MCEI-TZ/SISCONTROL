generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("MSSQL_URL")
}

model ActividadesApoyoDocentes {
  Id                       BigInt                   @id(map: "PK_ActividadesApoyoDocentes")
  IdDocente                Int
  IdPeriodo                Int                      @db.SmallInt
  IdActividad              Int                      @db.TinyInt
  HoraLun                  String                   @db.NVarChar(8)
  HoraMar                  String                   @db.NVarChar(8)
  HoraMie                  String                   @db.NVarChar(8)
  HoraJue                  String                   @db.NVarChar(8)
  HoraVie                  String                   @db.NVarChar(8)
  HoraSab                  String                   @db.NVarChar(8)
  Docente                  Docente                  @relation(fields: [IdDocente], references: [IdDoce], onUpdate: NoAction, map: "FK_ActividadesApoyoDocentes_Docente")
  OtrasActividadesDocentes OtrasActividadesDocentes @relation(fields: [IdActividad], references: [Id], onUpdate: NoAction, map: "FK_ActividadesApoyoDocentes_OtrasActividadesDocentes")
}

model Alumno {
  NumControl                  Int                         @id(map: "PK__Alumno__8699667EE196FB91")
  NumFicha                    String?                     @db.NVarChar(9)
  APaterno                    String                      @db.NVarChar(20)
  AMaterno                    String                      @db.NVarChar(20)
  Nombre                      String                      @db.NVarChar(25)
  NombreCompleto              String                      @db.NVarChar(67)
  Genero                      String                      @db.Char(1)
  FNacimiento                 DateTime                    @db.Date
  CURP                        String                      @db.NVarChar(18)
  Situacion                   Int                         @db.TinyInt
  Clave                       Bytes                       @db.Binary(20)
  Edad                        Int?
  AnioIngreso                 Int?
  Semestre                    Int                         @db.TinyInt
  IdCarre                     Int                         @db.TinyInt
  PeriodoIngreso              Int                         @db.SmallInt
  CorreoE                     String?                     @db.NVarChar(255)
  PeriodoEgreso               Int?                        @db.SmallInt
  PeriodosConvalidados        Int                         @db.TinyInt
  IdPlanEstudio               Int                         @db.SmallInt
  IdModuloEspecialidad        Int?                        @db.SmallInt
  IdModalidadEstudio          Int                         @db.TinyInt
  IdTipoIngreso               Int                         @db.TinyInt
  IdBachillerato              Int
  IdEspecialidadBachillerato  Int                         @db.TinyInt
  PromedioBachillerato        Float
  AnioEgresoBachillerato      Int                         @db.SmallInt
  Bachilleratos               Bachilleratos               @relation(fields: [IdBachillerato], references: [Id], onUpdate: NoAction, map: "FK_Alumno_Bachilleratos")
  Carrera                     Carrera                     @relation(fields: [IdCarre], references: [IdCarre], onUpdate: NoAction, map: "FK_Alumno_Carrera")
  EspecialidadesBachilleratos EspecialidadesBachilleratos @relation(fields: [IdEspecialidadBachillerato], references: [Id], onUpdate: NoAction, map: "FK_Alumno_EspecialidadesBachilleratos")
  ModalidadesEstudio          ModalidadesEstudio          @relation(fields: [IdModalidadEstudio], references: [Id], onUpdate: NoAction, map: "FK_Alumno_ModalidadesEstudio")
  PlanesEstudio               PlanesEstudio               @relation(fields: [IdPlanEstudio], references: [Id], onUpdate: NoAction, map: "FK_Alumno_PlanesEstudio")
  TiposIngresoAlumno          TiposIngresoAlumno          @relation(fields: [IdTipoIngreso], references: [Id], onUpdate: NoAction, map: "FK_Alumno_TiposIngresoAlumno")
  AutosAlumnos                AutosAlumnos[]
  CargaAlumno                 CargaAlumno[]
  Certificados                Certificados[]
  ControlAsis                 ControlAsis[]
  DatosPersonalesAlumnos      DatosPersonalesAlumnos?
  PagosInscripciones          PagosInscripciones[]
  Vehiculo                    Vehiculo[]
}

model AsesorExterno {
  Id                   Int                    @id(map: "PK_AsesorExterno")
  Nombre               String?                @db.NVarChar(20)
  ApellidoPaterno      String?                @db.NVarChar(20)
  ApellidoMAterno      String?                @db.NVarChar(20)
  Grado                String?                @db.NVarChar(8)
  Puesto               String?                @db.NVarChar(40)
  IdEmpresa            Int?
  Empresas             Empresas?              @relation(fields: [IdEmpresa], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_AsesorExterno_Empresas")
  ProyectosResidencias ProyectosResidencias[]
}

model AsistenciaAlumno {
  IdAsistenciaAlumno BigInt   @id(map: "PK__Asistenc__6EC67F0581671AAF") @default(autoincrement())
  MateriaGrupo       String   @db.NChar(12)
  Unidad             Int      @db.TinyInt
  Fecha              DateTime @db.Date
  Situacion          String   @db.Char(1)
  NumControl         Int
  IdPerio            Int      @db.SmallInt
}

model Asunto {
  IdAsunto    Int         @id @default(autoincrement())
  Descripcion String      @db.NVarChar(50)
  IdEvento    Int
  Evento      Evento      @relation(fields: [IdEvento], references: [IdEvento], onUpdate: NoAction, map: "FK_Asunto_Evento")
  Visitante   Visitante[]
}

model AulasExamenAdmision {
  Id               Int                @id(map: "PK__AulasExa__3214EC07DFD3077D") @default(autoincrement()) @db.TinyInt
  Nombre           String             @db.NVarChar(15)
  Capacidad        Int                @db.TinyInt
  Acumulado        Int                @db.TinyInt
  IdCarrera        Int                @db.TinyInt
  Carrera          Carrera            @relation(fields: [IdCarrera], references: [IdCarre], onUpdate: NoAction, map: "FK__AulasExam__IdCar__27CF9CBD")
  FichasAspirantes FichasAspirantes[]
}

model AutosAlumnos {
  NumControl Int
  IdVehiculo Int
  Alumno     Alumno   @relation(fields: [NumControl], references: [NumControl], onUpdate: NoAction, map: "FK_AutosAlumnos_Alumno")
  Vehiculo   Vehiculo @relation(fields: [IdVehiculo], references: [IdVehiculo], onUpdate: NoAction, map: "FK_AutosAlumnos_Vehiculo")

  @@id([NumControl, IdVehiculo], map: "PK__AutosAlu__C191075FB66910E6")
}

model AutosDoce {
  IdDoce     Int
  IdVehiculo Int
  Docente    Docente  @relation(fields: [IdDoce], references: [IdDoce], onUpdate: NoAction, map: "FK_AutosDoce_Docente")
  Vehiculo   Vehiculo @relation(fields: [IdVehiculo], references: [IdVehiculo], onUpdate: NoAction, map: "FK_AutosDoce_Vehiculo")

  @@id([IdDoce, IdVehiculo], map: "PK__AutosDoc__4972F0219938F072")
}

model AutosVisitante {
  idVisitante Int
  IdVehiculo  Int
  Vehiculo    Vehiculo  @relation(fields: [IdVehiculo], references: [IdVehiculo], onUpdate: NoAction, map: "FK_AutosVisitante_Vehiculo")
  Visitante   Visitante @relation(fields: [idVisitante], references: [idVisitante], onUpdate: NoAction, map: "FK_AutosVisitante_Visitante")

  @@id([idVisitante, IdVehiculo], map: "PK__AutosVis__D36E3EFE092BCFC5")
}

model Bachilleratos {
  Id                        Int                         @id(map: "PK__Bachille__3214EC078DE9F9BE") @default(autoincrement())
  Nombre                    String                      @db.NVarChar(120)
  ClaveOficial              String?                     @db.NChar(11)
  IdLocalidad               Int
  Alumno                    Alumno[]
  Localidades               Localidades                 @relation(fields: [IdLocalidad], references: [Id], onUpdate: NoAction, map: "FK__Bachiller__IdLoc__477D5240")
  DatosAcademicosAspirantes DatosAcademicosAspirantes[]
}

model CalificacionPorCriterio {
  IdCalificacionPorCriterio BigInt            @id(map: "PK__Califica__C0F24E2EC98E57F4") @default(autoincrement())
  IdCriterioPorUnidad       BigInt
  Calificacion              Float
  IdDetalleCarga            BigInt?
  CriterioPorUnidad         CriterioPorUnidad @relation(fields: [IdCriterioPorUnidad], references: [IdCriterioPorUnidad], onDelete: Cascade, onUpdate: NoAction, map: "FK__Calificac__IdCri__7A8729A3")
  DetalleCarga              DetalleCarga?     @relation(fields: [IdDetalleCarga], references: [IdDetalleCarga], onDelete: Cascade, onUpdate: NoAction, map: "FK__Calificac__IdDet__7B7B4DDC")
}

model CargaAlumno {
  IdCarga                                                                                    BigInt                          @id(map: "PK__CargaAlu__6C985617A2C7B912") @default(autoincrement())
  CalFinal                                                                                   Float
  OpcionInicial                                                                              Int                             @db.TinyInt
  OpcionFinal                                                                                Int                             @db.TinyInt
  FaltasTotales                                                                              Int                             @db.TinyInt
  Desertor                                                                                   Boolean
  IdGrupo                                                                                    Int
  NumControl                                                                                 Int
  SemestreAlumno                                                                             Int                             @db.TinyInt
  Grupo                                                                                      Grupo                           @relation(fields: [IdGrupo], references: [IdGrupo], onDelete: Cascade, onUpdate: NoAction, map: "FK__CargaAlum__IdGru__3B75D760")
  Alumno                                                                                     Alumno                          @relation(fields: [NumControl], references: [NumControl], map: "FK__CargaAlum__NumCo__3C69FB99")
  OpcionesAcreditacionAsignaturas_CargaAlumno_OpcionInicialToOpcionesAcreditacionAsignaturas OpcionesAcreditacionAsignaturas @relation("CargaAlumno_OpcionInicialToOpcionesAcreditacionAsignaturas", fields: [OpcionInicial], references: [Id], onUpdate: NoAction, map: "FK_CargaAlumno_OpcionesAcreditacionAsignaturas")
  OpcionesAcreditacionAsignaturas_CargaAlumno_OpcionFinalToOpcionesAcreditacionAsignaturas   OpcionesAcreditacionAsignaturas @relation("CargaAlumno_OpcionFinalToOpcionesAcreditacionAsignaturas", fields: [OpcionFinal], references: [Id], onUpdate: NoAction, map: "FK_CargaAlumno_OpcionesAcreditacionAsignaturas1")
  DetalleCarga                                                                               DetalleCarga[]
  EquivalenciaDeMaterias                                                                     EquivalenciaDeMaterias[]
  ResidenciasProfesionales                                                                   ResidenciasProfesionales[]
}

model Carrera {
  IdCarre                                                                   Int                          @id(map: "PK__Carrera__6C9FE071B8D5A7B4") @db.TinyInt
  Nombre                                                                    String                       @db.NVarChar(70)
  NombreCorto                                                               String                       @db.NVarChar(25)
  Letra                                                                     String?                      @db.Char(2)
  Situacion                                                                 Int                          @db.TinyInt
  IdDepa                                                                    Int                          @db.SmallInt
  IdJefe                                                                    Int
  IdNivelEstudio                                                            Int                          @db.TinyInt
  FechaInicio                                                               DateTime                     @db.Date
  FechaTerminacion                                                          DateTime                     @db.Date
  PeriodoModulo                                                             Int
  Alumno                                                                    Alumno[]
  AulasExamenAdmision                                                       AulasExamenAdmision[]
  Departamento                                                              Departamento                 @relation(fields: [IdDepa], references: [IdDepa], onUpdate: NoAction, map: "FK__Carrera__IdDepa__145C0A3F")
  Empleado                                                                  Empleado                     @relation(fields: [IdJefe], references: [NoNomina], map: "FK_Carrera_Empleado")
  NivelesEstudio                                                            NivelesEstudio               @relation(fields: [IdNivelEstudio], references: [Id], onUpdate: NoAction, map: "FK_Carrera_NivelesEstudio")
  DatosAcademicosAspirantes_DatosAcademicosAspirantes_IdCarreraOp1ToCarrera DatosAcademicosAspirantes[]  @relation("DatosAcademicosAspirantes_IdCarreraOp1ToCarrera")
  DatosAcademicosAspirantes_DatosAcademicosAspirantes_IdCarreraOp2ToCarrera DatosAcademicosAspirantes[]  @relation("DatosAcademicosAspirantes_IdCarreraOp2ToCarrera")
  Grupo                                                                     Grupo[]
  ModalidadesEstudioCarreras                                                ModalidadesEstudioCarreras[]
  PlanesEstudio                                                             PlanesEstudio[]
}

model Categor_asDocentes {
  Id          Int    @id(map: "PK_CategoríasDocentes") @db.TinyInt
  Nombre      String @db.NVarChar(40)
  NombreCorto String @db.NVarChar(25)
  Tipo        Int    @db.TinyInt

  @@map("CategoríasDocentes")
}

model Certificados {
  Folio      String   @id(map: "PK_Certificados") @db.NVarChar(10)
  NumControl Int
  Libro      String   @db.NVarChar(10)
  Fojas      Int
  Fecha      DateTime @db.Date
  Alumno     Alumno   @relation(fields: [NumControl], references: [NumControl], onUpdate: NoAction, map: "FK_Certificados_Alumno")
}

model ControlAsis {
  IdControlAsis   Int             @id @default(autoincrement())
  NumControl      Int?
  IdDoce          Int?
  idVisitante     Int?
  idTipo          Int
  IdEspacio       Int             @db.SmallInt
  idVehiculo      Int?
  HoraEntrada     DateTime?       @db.DateTime
  HoraSalida      DateTime?       @db.DateTime
  IdTpTransport   Int?
  Alumno          Alumno?         @relation(fields: [NumControl], references: [NumControl], onDelete: NoAction, onUpdate: NoAction, map: "FK_ControlAsis_Alumno")
  Docente         Docente?        @relation(fields: [IdDoce], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK_ControlAsis_Docente")
  EspaciosDeClase EspaciosDeClase @relation(fields: [IdEspacio], references: [Id], onUpdate: NoAction, map: "FK_ControlAsis_Espacio")
  TipoPersona     TipoPersona     @relation(fields: [idTipo], references: [IdTipo], onUpdate: NoAction, map: "FK_ControlAsis_TipoPersona")
  tipoTransport   tipoTransport?  @relation(fields: [IdTpTransport], references: [IdTpTransp], onDelete: NoAction, onUpdate: NoAction, map: "FK_ControlAsis_tipoTransport")
  Vehiculo        Vehiculo?       @relation(fields: [idVehiculo], references: [IdVehiculo], onDelete: NoAction, onUpdate: NoAction, map: "FK_ControlAsis_Vehiculo")
  Visitante       Visitante?      @relation(fields: [idVisitante], references: [idVisitante], onDelete: NoAction, onUpdate: NoAction, map: "FK_ControlAsis_Visitante")
}

model CriterioEvaluacion {
  IdCriterio        Int                 @id(map: "PK__Criterio__71394482CC6A9C3C") @default(autoincrement()) @db.TinyInt
  Nombre            String              @db.VarChar(25)
  Activo            Boolean?
  CriterioPorUnidad CriterioPorUnidad[]
}

model CriterioPorUnidad {
  IdCriterioPorUnidad     BigInt                    @id(map: "PK__Criterio__A16A6FD7680436C2") @default(autoincrement())
  IdGrupo                 Int?
  IdCriterio              Int                       @db.TinyInt
  Porcentaje              Float
  Unidad                  Int                       @db.TinyInt
  CalificacionPorCriterio CalificacionPorCriterio[]
  CriterioEvaluacion      CriterioEvaluacion        @relation(fields: [IdCriterio], references: [IdCriterio], onUpdate: NoAction, map: "FK__CriterioP__IdCri__3C89F72A")
}

model CuentasAspirantes {
  Id                        BigInt                     @id(map: "PK__CuentasA__3214EC076A236FE1") @default(autoincrement())
  CorreoE                   String                     @db.NVarChar(255)
  ClaveAcceso               Bytes                      @db.Binary(20)
  APaterno                  String                     @db.NVarChar(20)
  AMaterno                  String                     @db.NVarChar(20)
  Nombre                    String                     @db.NVarChar(35)
  NombreCompleto            String                     @db.NVarChar(77)
  FechaRegistro             DateTime                   @db.Date
  FechaUltimoAcceso         DateTime                   @db.Date
  IdPeriodoRegistro         Int?                       @db.SmallInt
  PeriodoEscolar            PeriodoEscolar?            @relation(fields: [IdPeriodoRegistro], references: [IdPerio], onDelete: NoAction, onUpdate: NoAction, map: "FK_CuentasAspirantes_PeriodoEscolar")
  DatosAcademicosAspirantes DatosAcademicosAspirantes?
  DatosFamiliaresAspirantes DatosFamiliaresAspirantes?
  DatosPersonalesAspirantes DatosPersonalesAspirantes?
  FichasAspirantes          FichasAspirantes?
}

model DatosAcademicosAspirantes {
  IdCuentaAspirante                                       BigInt                       @id(map: "PK__DatosAca__F800061F777A9DD1")
  IdBachilleratoOrigen                                    Int?
  IdEspecialidadBachillerato                              Int?                         @db.TinyInt
  AnioEgreso                                              Int                          @db.SmallInt
  Promedio                                                Float                        @db.Real
  IdBeca                                                  Int                          @db.TinyInt
  IdCarreraOp1                                            Int                          @db.TinyInt
  IdCarreraOp2                                            Int                          @db.TinyInt
  IdModalidad                                             Int                          @db.TinyInt
  Bachilleratos                                           Bachilleratos?               @relation(fields: [IdBachilleratoOrigen], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__DatosAcad__IdBac__09160B73")
  ProgramasBecas                                          ProgramasBecas               @relation(fields: [IdBeca], references: [Id], onUpdate: NoAction, map: "FK__DatosAcad__IdBec__0AFE53E5")
  Carrera_DatosAcademicosAspirantes_IdCarreraOp1ToCarrera Carrera                      @relation("DatosAcademicosAspirantes_IdCarreraOp1ToCarrera", fields: [IdCarreraOp1], references: [IdCarre], onUpdate: NoAction, map: "FK__DatosAcad__IdCar__0BF2781E")
  Carrera_DatosAcademicosAspirantes_IdCarreraOp2ToCarrera Carrera                      @relation("DatosAcademicosAspirantes_IdCarreraOp2ToCarrera", fields: [IdCarreraOp2], references: [IdCarre], onUpdate: NoAction, map: "FK__DatosAcad__IdCar__0CE69C57")
  CuentasAspirantes                                       CuentasAspirantes            @relation(fields: [IdCuentaAspirante], references: [Id], onUpdate: NoAction, map: "FK__DatosAcad__IdCue__0821E73A")
  EspecialidadesBachilleratos                             EspecialidadesBachilleratos? @relation(fields: [IdEspecialidadBachillerato], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__DatosAcad__IdEsp__0A0A2FAC")
  ModalidadesEstudio                                      ModalidadesEstudio           @relation(fields: [IdModalidad], references: [Id], onUpdate: NoAction, map: "FK__DatosAcad__IdMod__0DDAC090")
}

model DatosFamiliaresAspirantes {
  IdCuentaAspirante    BigInt            @id(map: "PK__DatosFam__F800061F87725D74")
  NombrePadre          String?           @db.NVarChar(60)
  PadreVive            Boolean?
  TelefonoPadre        String?           @db.Char(10)
  NombreMadre          String?           @db.NVarChar(60)
  MadreVive            Boolean?
  TelefonoMadre        String?           @db.Char(10)
  NombreTutor          String?           @db.NVarChar(60)
  CalleDomicilioTutor  String            @db.NVarChar(80)
  NumeroDomicilioTutor String?           @db.NVarChar(8)
  IdLocalidadTutor     Int
  TelCelularTutor      String?           @db.Char(10)
  TelCasaTutor         String?           @db.Char(10)
  CorreoETutor         String?           @db.NVarChar(255)
  CuentasAspirantes    CuentasAspirantes @relation(fields: [IdCuentaAspirante], references: [Id], onUpdate: NoAction, map: "FK__DatosFami__IdCue__2B6B2377")
  Localidades          Localidades       @relation(fields: [IdLocalidadTutor], references: [Id], onUpdate: NoAction, map: "FK__DatosFami__IdLoc__302FD894")
}

model DatosPersonalesAlumnos {
  NumControl                                                                            Int                      @id(map: "PK_DatosPersonalesAlumnos")
  IdEstadoNacimiento                                                                    Int
  CalleDomicilio                                                                        String                   @db.NVarChar(80)
  NumeroDomicilio                                                                       String?                  @db.NVarChar(8)
  IdLocalidad                                                                           Int
  IdEstadoCivil                                                                         Int                      @db.TinyInt
  TelCelular                                                                            String?                  @db.Char(10)
  TelCasa                                                                               String?                  @db.Char(10)
  IdServicioMedico                                                                      Int                      @db.TinyInt
  NumeroSeguridadSocial                                                                 BigInt
  GrupoSanguineo                                                                        String                   @db.NVarChar(8)
  IdLenguaIndigena                                                                      Int                      @db.TinyInt
  IdTipoDiscapacidad                                                                    Int                      @db.TinyInt
  NumeroHijos                                                                           Int?                     @db.TinyInt
  Peso                                                                                  Int?                     @db.TinyInt
  Estatura                                                                              Float?                   @db.SmallMoney
  NombrePadre                                                                           String?                  @db.NVarChar(60)
  PadreVive                                                                             Boolean?
  TelefonoPadre                                                                         String?                  @db.Char(10)
  IdLocalidadPadre                                                                      Int?
  CalleDomicilioPadre                                                                   String?                  @db.NVarChar(80)
  NumeroDomicilioPadre                                                                  String?                  @db.NVarChar(8)
  IdEscolaridadPadre                                                                    Int?                     @db.TinyInt
  CarreraPadre                                                                          String?                  @db.NVarChar(25)
  LugarTrabajoPadre                                                                     String?                  @db.NVarChar(25)
  MontoSueldoPadre                                                                      Float?                   @db.SmallMoney
  IdPeriodoPagoSueldoPadre                                                              Int?                     @db.TinyInt
  NombreMadre                                                                           String?                  @db.NVarChar(60)
  MadreVive                                                                             Boolean?
  TelefonoMadre                                                                         String?                  @db.Char(10)
  IdLocalidadMadre                                                                      Int?
  CalleDomicilioMadre                                                                   String?                  @db.NVarChar(80)
  NumeroDomicilioMadre                                                                  String?                  @db.NVarChar(8)
  IdEscolaridadMadre                                                                    Int?                     @db.TinyInt
  CarreraMadre                                                                          String?                  @db.NVarChar(25)
  LugarTrabajoMadre                                                                     String?                  @db.NVarChar(25)
  MontoSueldoMadre                                                                      Float?                   @db.SmallMoney
  IdPeriodoPagoSueldoMadre                                                              Int?                     @db.TinyInt
  NombreTutor                                                                           String?                  @db.NVarChar(60)
  CalleDomicilioTutor                                                                   String?                  @db.NVarChar(80)
  NumeroDomicilioTutor                                                                  String?                  @db.NVarChar(8)
  IdLocalidadTutor                                                                      Int?
  TelCelularTutor                                                                       String?                  @db.Char(10)
  TelCasaTutor                                                                          String?                  @db.Char(10)
  CorreoETutor                                                                          String?                  @db.NVarChar(255)
  OcupacionTutor                                                                        String?                  @db.NVarChar(50)
  HorarioTrabajoTutor                                                                   String?                  @db.NVarChar(30)
  DependeEconomicamenteDe                                                               String?                  @db.NVarChar(50)
  AlumnoTrabaja                                                                         Boolean?
  LugarTrabajoAlumno                                                                    String?                  @db.NVarChar(50)
  HorarioTrabajoAlumno                                                                  String?                  @db.NVarChar(25)
  MontoSueldoAlumno                                                                     Float?                   @db.SmallMoney
  IdPeriodoPagoSueldoAlumno                                                             Int?                     @db.TinyInt
  MontoIngresosFamiliares                                                               Float?                   @db.SmallMoney
  EnAccidenteAvisarAPersona                                                             String?                  @db.NVarChar(50)
  EnAccidenteAvisarATelefono                                                            String?                  @db.NVarChar(10)
  IdEspacioViviendaEstudios                                                             Int?                     @db.TinyInt
  IdTipoVivienda                                                                        Int?                     @db.TinyInt
  IdOrigenVivienda                                                                      Int?                     @db.TinyInt
  NumPersonasConQueVive                                                                 Int?                     @db.TinyInt
  ParentescoPersonasConQueVive                                                          String?                  @db.NVarChar(15)
  FechaUltimaActualizacion                                                              DateTime?                @db.DateTime
  Alumno                                                                                Alumno                   @relation(fields: [NumControl], references: [NumControl], map: "FK_DatosPersonalesAlumnos_Alumno")
  Discapacidades                                                                        Discapacidades           @relation(fields: [IdTipoDiscapacidad], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Discapacidades")
  Escolaridad_DatosPersonalesAlumnos_IdEscolaridadMadreToEscolaridad                    Escolaridad?             @relation("DatosPersonalesAlumnos_IdEscolaridadMadreToEscolaridad", fields: [IdEscolaridadMadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Escolaridad")
  Escolaridad_DatosPersonalesAlumnos_IdEscolaridadPadreToEscolaridad                    Escolaridad?             @relation("DatosPersonalesAlumnos_IdEscolaridadPadreToEscolaridad", fields: [IdEscolaridadPadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Escolaridad1")
  EspacioViviendaEstudios                                                               EspacioViviendaEstudios? @relation(fields: [IdEspacioViviendaEstudios], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_EspacioViviendaEstudios")
  EstadoCivil                                                                           EstadoCivil              @relation(fields: [IdEstadoCivil], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_EstadoCivil")
  EstadosRepublica                                                                      EstadosRepublica         @relation(fields: [IdEstadoNacimiento], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_EstadosRepublica")
  LenguasIndigenas                                                                      LenguasIndigenas         @relation(fields: [IdLenguaIndigena], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_LenguasIndigenas")
  Localidades_DatosPersonalesAlumnos_IdLocalidadToLocalidades                           Localidades              @relation("DatosPersonalesAlumnos_IdLocalidadToLocalidades", fields: [IdLocalidad], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Localidades")
  Localidades_DatosPersonalesAlumnos_IdLocalidadTutorToLocalidades                      Localidades?             @relation("DatosPersonalesAlumnos_IdLocalidadTutorToLocalidades", fields: [IdLocalidadTutor], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Localidades1")
  Localidades_DatosPersonalesAlumnos_IdLocalidadPadreToLocalidades                      Localidades?             @relation("DatosPersonalesAlumnos_IdLocalidadPadreToLocalidades", fields: [IdLocalidadPadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Localidades2")
  Localidades_DatosPersonalesAlumnos_IdLocalidadMadreToLocalidades                      Localidades?             @relation("DatosPersonalesAlumnos_IdLocalidadMadreToLocalidades", fields: [IdLocalidadMadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_Localidades3")
  OrigenVivienda                                                                        OrigenVivienda?          @relation(fields: [IdOrigenVivienda], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_OrigenVivienda")
  PeriodoPagoSueldo_DatosPersonalesAlumnos_IdPeriodoPagoSueldoPadreToPeriodoPagoSueldo  PeriodoPagoSueldo?       @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoPadreToPeriodoPagoSueldo", fields: [IdPeriodoPagoSueldoPadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_PeriodoPagoSueldo")
  PeriodoPagoSueldo_DatosPersonalesAlumnos_IdPeriodoPagoSueldoMadreToPeriodoPagoSueldo  PeriodoPagoSueldo?       @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoMadreToPeriodoPagoSueldo", fields: [IdPeriodoPagoSueldoMadre], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_PeriodoPagoSueldo1")
  PeriodoPagoSueldo_DatosPersonalesAlumnos_IdPeriodoPagoSueldoAlumnoToPeriodoPagoSueldo PeriodoPagoSueldo?       @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoAlumnoToPeriodoPagoSueldo", fields: [IdPeriodoPagoSueldoAlumno], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_PeriodoPagoSueldo2")
  ServiciosMedicos                                                                      ServiciosMedicos         @relation(fields: [IdServicioMedico], references: [Id], onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_ServiciosMedicos")
  TipoVivienda                                                                          TipoVivienda?            @relation(fields: [IdTipoVivienda], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DatosPersonalesAlumnos_TipoVivienda")
}

model DatosPersonalesAspirantes {
  IdCuentaAspirante     BigInt            @id(map: "PK__DatosPer__F800061F536BA9AA")
  CURP                  String            @db.Char(18)
  HomoclaveRFC          String?           @db.Char(3)
  RFC                   String?           @db.VarChar(13)
  FechaNacimiento       DateTime?         @db.Date
  Genero                String?           @db.VarChar(1)
  IdMunicipioNacimiento Int
  CalleDomicilio        String            @db.NVarChar(80)
  NumeroDomicilio       String?           @db.NVarChar(8)
  IdLocalidad           Int
  IdEstadoCivil         Int               @db.TinyInt
  TelCelular            String?           @db.Char(10)
  TelCasa               String?           @db.Char(10)
  Facebook              String?           @db.NVarChar(50)
  Twitter               String?           @db.NVarChar(50)
  IdServicioMedico      Int               @db.TinyInt
  NumeroSeguridadSocial BigInt
  GrupoSanguineo        String            @db.NVarChar(8)
  IdLenguaIndigena      Int               @db.TinyInt
  IdTipoDiscapacidad    Int               @db.TinyInt
  CuentasAspirantes     CuentasAspirantes @relation(fields: [IdCuentaAspirante], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdCue__18584F03")
  EstadoCivil           EstadoCivil       @relation(fields: [IdEstadoCivil], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdEst__1D1D0420")
  LenguasIndigenas      LenguasIndigenas  @relation(fields: [IdLenguaIndigena], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdLen__1F054C92")
  Localidades           Localidades       @relation(fields: [IdLocalidad], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdLoc__1C28DFE7")
  Municipios            Municipios        @relation(fields: [IdMunicipioNacimiento], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdMun__1A409775")
  ServiciosMedicos      ServiciosMedicos  @relation(fields: [IdServicioMedico], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdSer__1E112859")
  Discapacidades        Discapacidades    @relation(fields: [IdTipoDiscapacidad], references: [Id], onUpdate: NoAction, map: "FK__DatosPers__IdTip__1FF970CB")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model DatosTempAlumnos {
  NumControl                 Int
  NumFicha                   String @db.Char(6)
  NombreCompleto             String @db.NVarChar(67)
  IdBachilleratoOrigen       Int?
  IdEspecialidadBachillerato Int?   @db.TinyInt
  AnioEgreso                 Int    @db.SmallInt
  Promedio                   Float  @db.Real

  @@ignore
}

model Departamento {
  IdDepa      Int        @id(map: "PK__Departam__F0682C8CAD4350B6") @db.SmallInt
  Nombre      String     @db.NVarChar(60)
  NombreCorto String     @db.NVarChar(20)
  Carrera     Carrera[]
  Docente     Docente[]
  Empleado    Empleado[]
  Materia     Materia[]
}

model DetalleCarga {
  IdDetalleCarga          BigInt                    @id(map: "PK__DetalleC__EC519E04887CC3F9") @default(autoincrement())
  Parcial                 Float
  Unidad                  Int                       @db.TinyInt
  Opcion                  Int                       @db.TinyInt
  Faltas                  Int                       @db.TinyInt
  IdCarga                 BigInt?
  CalificacionPorCriterio CalificacionPorCriterio[]
  CargaAlumno             CargaAlumno?              @relation(fields: [IdCarga], references: [IdCarga], onDelete: Cascade, onUpdate: NoAction, map: "FK__DetalleCa__IdCar__412EB0B6")
}

model Discapacidades {
  Id                        Int                         @id(map: "PK__Discapac__3214EC073220DD1A") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(50)
  DatosPersonalesAlumnos    DatosPersonalesAlumnos[]
  DatosPersonalesAspirantes DatosPersonalesAspirantes[]
}

model Docente {
  IdDoce                                                              Int                        @id(map: "PK__Docente__0E7A91001FFF3770")
  Apellidos                                                           String                     @db.NVarChar(30)
  Nombre                                                              String                     @db.NVarChar(30)
  NombreCompleto                                                      String                     @db.NVarChar(61)
  Genero                                                              String                     @db.Char(1)
  Grado                                                               String                     @db.NVarChar(6)
  NumNomina                                                           Int
  Vigente                                                             Boolean?
  IdDepa                                                              Int?                       @db.SmallInt
  ActividadesApoyoDocentes                                            ActividadesApoyoDocentes[]
  AutosDoce                                                           AutosDoce[]
  ControlAsis                                                         ControlAsis[]
  Departamento                                                        Departamento?              @relation(fields: [IdDepa], references: [IdDepa], onDelete: NoAction, onUpdate: NoAction, map: "FK__Docente__IdDepa__1DE57479")
  Docente                                                             Docente                    @relation("DocenteToDocente", fields: [IdDoce], references: [IdDoce], onUpdate: NoAction, map: "FK_Docente_Docente")
  other_Docente                                                       Docente?                   @relation("DocenteToDocente")
  Grupo                                                               Grupo[]
  HorasApoyoDocentes                                                  HorasApoyoDocentes[]
  HorasDocente                                                        HorasDocente[]
  ProyectosResidencias_ProyectosResidencias_IdAsesorInterno1ToDocente ProyectosResidencias[]     @relation("ProyectosResidencias_IdAsesorInterno1ToDocente")
  ProyectosResidencias_ProyectosResidencias_IdAsesorInterno2ToDocente ProyectosResidencias[]     @relation("ProyectosResidencias_IdAsesorInterno2ToDocente")
  Vehiculo                                                            Vehiculo[]
}

model Empleado {
  NoNomina             Int                  @id(map: "PK__Empleado__00E81081E72FF680")
  Nombre               String               @db.NVarChar(50)
  ApellidoPaterno      String               @db.NVarChar(50)
  ApellidoMaterno      String?              @db.NVarChar(50)
  NombreCompleto       String?              @db.NVarChar(152)
  Genero               String               @db.Char(1)
  CURP                 String               @db.Char(18)
  RFC                  String               @db.Char(13)
  Estatus              Int                  @db.TinyInt
  IdEstadoCivil        Int?                 @db.TinyInt
  Direccion            String?              @db.VarChar(50)
  IdLocalidad          Int
  NumAfiliacionISSSTEP Int?
  TipoSangre           String?              @db.Char(5)
  CorreoElectronico    String?              @db.VarChar(100)
  TelefonoCasa         String?              @db.VarChar(10)
  Celular              String?              @db.VarChar(10)
  FechaNacimiento      DateTime?            @db.Date
  ClaveAcceso          Bytes?               @db.Binary(20)
  IdDepartamento       Int                  @db.SmallInt
  Carrera              Carrera[]
  Departamento         Departamento         @relation(fields: [IdDepartamento], references: [IdDepa], map: "FK_Empleado_Departamento")
  EstadoCivil          EstadoCivil?         @relation(fields: [IdEstadoCivil], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Empleado_EstadoCivil")
  Localidades          Localidades          @relation(fields: [IdLocalidad], references: [Id], onUpdate: NoAction, map: "FK_Empleado_Localidades")
  FotosEmpleados       FotosEmpleados?
  PagosInscripciones   PagosInscripciones[]
  UsuariosEscritorio   UsuariosEscritorio[]
}

model Empresas {
  Id                    Int                     @id(map: "PK_Empresas") @default(autoincrement())
  Nombre                String?                 @db.NVarChar(80)
  Telefono              String?                 @db.NVarChar(10)
  Calle                 String?                 @db.NVarChar(50)
  Numero                String?                 @db.NVarChar(5)
  IdLocalidad           Int?
  AsesorExterno         AsesorExterno[]
  Localidades           Localidades?            @relation(fields: [IdLocalidad], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Empresas_Localidades")
  RepresentantesEmpresa RepresentantesEmpresa[]
}

model EquivalenciaDeMaterias {
  Id          Int         @id(map: "PK_GruposExtendidos") @default(autoincrement())
  IdMateria   String      @db.NVarChar(10)
  IdCarga     BigInt
  CargaAlumno CargaAlumno @relation(fields: [IdCarga], references: [IdCarga], onUpdate: NoAction, map: "FK_CursosEquivalentes_CursosEquivalentes")
  Materia     Materia     @relation(fields: [IdMateria], references: [IdMate], onUpdate: NoAction, map: "FK_GruposEquivalentes_Materia")
}

model Escolaridad {
  Id                                                                            Int                      @id(map: "PK_Escolaridad") @db.TinyInt
  Nombre                                                                        String                   @db.NVarChar(15)
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdEscolaridadMadreToEscolaridad DatosPersonalesAlumnos[] @relation("DatosPersonalesAlumnos_IdEscolaridadMadreToEscolaridad")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdEscolaridadPadreToEscolaridad DatosPersonalesAlumnos[] @relation("DatosPersonalesAlumnos_IdEscolaridadPadreToEscolaridad")
}

model EspaciosDeClase {
  Id          Int           @id(map: "Id") @default(autoincrement()) @db.SmallInt
  Nombre      String        @db.NVarChar(30)
  Abreviatura String        @db.NVarChar(4)
  Capacidad   Int           @db.TinyInt
  IdSituacion Int           @db.TinyInt
  ControlAsis ControlAsis[]
  Situacion   Situacion     @relation(fields: [IdSituacion], references: [Id], onUpdate: NoAction, map: "FK_EspaciosDeClase_Situacion")
}

model EspacioViviendaEstudios {
  Id                     Int                      @id(map: "PK_EspacioViviendaEstudios") @db.TinyInt
  Nombre                 String                   @db.NVarChar(25)
  DatosPersonalesAlumnos DatosPersonalesAlumnos[]
}

model EspecialidadesBachilleratos {
  Id                        Int                         @id(map: "PK__Especial__3214EC07E16F9759") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(120)
  Alumno                    Alumno[]
  DatosAcademicosAspirantes DatosAcademicosAspirantes[]
}

model EstadoCivil {
  Id                        Int                         @id(map: "PK__EstadoCi__3214EC078864ED16") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(50)
  DatosPersonalesAlumnos    DatosPersonalesAlumnos[]
  DatosPersonalesAspirantes DatosPersonalesAspirantes[]
  Empleado                  Empleado[]
}

model EstadosRepublica {
  Id                     Int                      @id(map: "PK__EstadoRe__3214EC071A002441") @default(autoincrement())
  Nombre                 String                   @db.VarChar(80)
  AbreviadoCURP          String?                  @db.Char(2)
  DatosPersonalesAlumnos DatosPersonalesAlumnos[]
  Municipios             Municipios[]
}

model Evento {
  IdEvento      Int      @id @default(autoincrement())
  Nombre_Evento String   @db.NVarChar(70)
  fecha_inicio  DateTime @db.DateTime
  fecha_fin     DateTime @db.DateTime
  Habilitado    Boolean
  Asunto        Asunto[]
}

model FichasAspirantes {
  IdCuentaAspirante   BigInt              @id(map: "PK__FichasAs__F800061F7AD7379F")
  NumFicha            String              @db.Char(6)
  IdCotejo            Int
  IdAula              Int                 @db.TinyInt
  FechaCotejo         DateTime?           @db.Date
  Etapa               Int?                @db.TinyInt
  AulasExamenAdmision AulasExamenAdmision @relation(fields: [IdAula], references: [Id], onUpdate: NoAction, map: "FK__FichasAsp__IdAul__5C0E5AD2")
  CuentasAspirantes   CuentasAspirantes   @relation(fields: [IdCuentaAspirante], references: [Id], onUpdate: NoAction, map: "FK__FichasAsp__IdCue__5A261260")
  UsuariosEscritorio  UsuariosEscritorio  @relation(fields: [IdCotejo], references: [Id], onUpdate: NoAction, map: "FK__UsuariosEscritorio_FichasAsp")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model FoliosConstancias {
  IdPeriodo  Int      @db.SmallInt
  Folio      Int      @db.SmallInt
  NumControl Int
  Tipo       String   @db.Char(3)
  Fecha      DateTime @db.Date

  @@ignore
}

model FotosEmpleados {
  NoNomina Int      @id(map: "PK_FotosEmpleados")
  Imagen   Bytes
  Empleado Empleado @relation(fields: [NoNomina], references: [NoNomina], onUpdate: NoAction, map: "FK_FotosEmpleados_Empleado")
}

model Grupo {
  IdGrupo        Int             @id(map: "PK__Grupo__303F6FD9589A64D1") @default(autoincrement())
  Clave          String          @db.NVarChar(4)
  CvePlan        String          @db.Char(1)
  Cupo           Int             @db.TinyInt
  Inscritos      Int             @db.TinyInt
  Semestre       Int?            @db.TinyInt
  HoraLun        String          @db.NVarChar(8)
  AulaLun        String          @db.NVarChar(4)
  HoraMar        String          @db.NVarChar(8)
  AulaMar        String          @db.NVarChar(4)
  HoraMie        String          @db.NVarChar(8)
  AulaMie        String          @db.NVarChar(4)
  HoraJue        String          @db.NVarChar(8)
  AulaJue        String          @db.NVarChar(4)
  HoraVie        String          @db.NVarChar(8)
  AulaVie        String          @db.NVarChar(4)
  HoraSab        String          @db.NVarChar(8)
  AulaSab        String          @db.NVarChar(4)
  Aprobados      Int             @db.TinyInt
  Reprobados     Int             @db.TinyInt
  Desertores     Int             @db.TinyInt
  IdMate         String?         @db.NVarChar(10)
  IdDoce         Int?
  IdPerio        Int?            @db.SmallInt
  IdCarre        Int?            @db.TinyInt
  Abierto        Boolean
  IdPlanEstudio  Int?
  Vigente        Boolean
  FolioActa      Int?
  CargaAlumno    CargaAlumno[]
  Docente        Docente?        @relation(fields: [IdDoce], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK__Grupo__IdDoce__34C8D9D1")
  Materia        Materia?        @relation(fields: [IdMate], references: [IdMate], onDelete: NoAction, onUpdate: NoAction, map: "FK__Grupo__IdMate__33D4B598")
  PeriodoEscolar PeriodoEscolar? @relation(fields: [IdPerio], references: [IdPerio], onDelete: NoAction, onUpdate: NoAction, map: "FK__Grupo__IdPerio__35BCFE0A")
  Carrera        Carrera?        @relation(fields: [IdCarre], references: [IdCarre], onDelete: NoAction, onUpdate: NoAction, map: "FK_Grupo_Carrera")
}

model GruposSanguineos {
  Id     Int    @id(map: "PK_GruposSanguineos") @db.TinyInt
  Nombre String @db.NVarChar(10)
}

model HorasApoyoDocentes {
  IdPeriodo                Int                      @db.SmallInt
  IdDocente                Int
  DiaSemana                Int                      @db.TinyInt
  Hora                     Int                      @db.TinyInt
  IdOtraActividadDocente   Int                      @db.TinyInt
  Espacio                  String                   @db.NVarChar(15)
  Docente                  Docente                  @relation(fields: [IdDocente], references: [IdDoce], onUpdate: NoAction, map: "FK_HorasApoyoDocentes_Docente")
  OtrasActividadesDocentes OtrasActividadesDocentes @relation(fields: [IdOtraActividadDocente], references: [Id], onUpdate: NoAction, map: "FK_HorasApoyoDocentes_OtrasActividadesDocentes")
  PeriodoEscolar           PeriodoEscolar           @relation(fields: [IdPeriodo], references: [IdPerio], onUpdate: NoAction, map: "FK_HorasApoyoDocentes_PeriodoEscolar")

  @@id([IdPeriodo, IdDocente, DiaSemana, Hora], map: "PK_HorasApoyoDocentes")
}

model HorasDocente {
  IdCargaDoce           Int             @id(map: "PK__HorasDoc__DB2656E7079CED93") @default(autoincrement())
  HorasTotal            Int             @db.TinyInt
  HorasFrenteAGrupo     Int?            @db.TinyInt
  HorasOtrasActividades Int?            @db.TinyInt
  IdDoce                Int?
  IdPerio               Int?            @db.SmallInt
  Docente               Docente?        @relation(fields: [IdDoce], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK__HorasDoce__IdDoc__20C1E124")
  PeriodoEscolar        PeriodoEscolar? @relation(fields: [IdPerio], references: [IdPerio], onDelete: NoAction, onUpdate: NoAction, map: "FK__HorasDoce__IdPer__21B6055D")
}

model Kardex {
  NumControl   Int
  IdMateria    String    @db.NVarChar(10)
  Calificacion Float
  OpcionFinal  Int       @db.TinyInt
  IdPeriodo1   Int?      @db.SmallInt
  Semestre1    Int?      @db.SmallInt
  IdPeriodo2   Int?      @db.SmallInt
  Semestre2    Int?      @db.SmallInt
  IdPeriodo3   Int?      @db.SmallInt
  Semestre3    Int?      @db.SmallInt
  Fecha        DateTime? @db.Date
  Materia      Materia   @relation(fields: [IdMateria], references: [IdMate], onUpdate: NoAction, map: "FK_Kardex_Materia")

  @@id([NumControl, IdMateria], map: "PK_Kardex")
}

model LenguasIndigenas {
  Id                        Int                         @id(map: "PK__LenguasI__3214EC07218C665E") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(50)
  DatosPersonalesAlumnos    DatosPersonalesAlumnos[]
  DatosPersonalesAspirantes DatosPersonalesAspirantes[]
}

model Localidades {
  Id                                                                          Int                         @id(map: "PK__Localida__3214EC0778220544") @default(autoincrement())
  Municipio_Id                                                                Int
  Nombre                                                                      String                      @db.VarChar(120)
  CP                                                                          Int?
  Zona                                                                        String                      @db.VarChar(32)
  Bachilleratos                                                               Bachilleratos[]
  DatosFamiliaresAspirantes                                                   DatosFamiliaresAspirantes[]
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdLocalidadToLocalidades      DatosPersonalesAlumnos[]    @relation("DatosPersonalesAlumnos_IdLocalidadToLocalidades")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdLocalidadTutorToLocalidades DatosPersonalesAlumnos[]    @relation("DatosPersonalesAlumnos_IdLocalidadTutorToLocalidades")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdLocalidadPadreToLocalidades DatosPersonalesAlumnos[]    @relation("DatosPersonalesAlumnos_IdLocalidadPadreToLocalidades")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdLocalidadMadreToLocalidades DatosPersonalesAlumnos[]    @relation("DatosPersonalesAlumnos_IdLocalidadMadreToLocalidades")
  DatosPersonalesAspirantes                                                   DatosPersonalesAspirantes[]
  Empleado                                                                    Empleado[]
  Empresas                                                                    Empresas[]
  Municipios                                                                  Municipios                  @relation(fields: [Municipio_Id], references: [Id], onUpdate: NoAction, map: "FK_Localidad_Municipio")
}

model Materia {
  IdMate                 String                   @id(map: "PK__Materia__4E664992D3DDDC47") @db.NVarChar(10)
  Nombre                 String                   @db.NVarChar(80)
  NombreCorto            String                   @db.NVarChar(20)
  Creditos               Int                      @db.TinyInt
  HorasTeoria            Int                      @db.TinyInt
  HorasPractica          Int                      @db.TinyInt
  Unidades               Int                      @db.TinyInt
  HorasCurso             Int?                     @db.SmallInt
  IdDepa                 Int?                     @db.SmallInt
  Objetivo               String?                  @db.NText
  Caracterizacion        String?                  @db.NText
  EquivalenciaDeMaterias EquivalenciaDeMaterias[]
  Grupo                  Grupo[]
  Kardex                 Kardex[]
  Departamento           Departamento?            @relation(fields: [IdDepa], references: [IdDepa], onDelete: NoAction, onUpdate: NoAction, map: "FK_Materia_Departamento")
  MateriasPlan           MateriasPlan[]
}

model MateriasPlan {
  IdPlan               Int                 @db.SmallInt
  IdMateria            String              @db.NVarChar(10)
  UbicacionReticula    Int                 @db.TinyInt
  IdModuloEspecialidad Int                 @db.SmallInt
  Materia              Materia             @relation(fields: [IdMateria], references: [IdMate], onUpdate: NoAction, map: "FK_MateriasPlan_Materia")
  ModulosEspecialidad  ModulosEspecialidad @relation(fields: [IdModuloEspecialidad], references: [Id], onUpdate: NoAction, map: "FK_MateriasPlan_ModulosEspecialidad")
  PlanesEstudio        PlanesEstudio       @relation(fields: [IdPlan], references: [Id], onUpdate: NoAction, map: "FK_MateriasPlan_PlanesEstudio")

  @@id([IdPlan, IdMateria, IdModuloEspecialidad], map: "PK_MateriasPlan_1")
}

model ModalidadesEstudio {
  Id                         Int                          @id(map: "PK__Modalida__3214EC0773424A78") @default(autoincrement()) @db.TinyInt
  Nombre                     String                       @db.NVarChar(50)
  Alumno                     Alumno[]
  DatosAcademicosAspirantes  DatosAcademicosAspirantes[]
  ModalidadesEstudioCarreras ModalidadesEstudioCarreras[]
}

model ModalidadesEstudioCarreras {
  IdModalidadEstudio Int                @db.TinyInt
  IdCarrera          Int                @db.TinyInt
  Carrera            Carrera            @relation(fields: [IdCarrera], references: [IdCarre], map: "FK_ModalidadesEstudioCarreras_Carrera")
  ModalidadesEstudio ModalidadesEstudio @relation(fields: [IdModalidadEstudio], references: [Id], map: "FK_ModalidadesEstudioCarreras_ModalidadesEstudio")

  @@id([IdCarrera, IdModalidadEstudio], map: "PK_ModalidadesEstudioCarreras")
}

model ModulosEscritorio {
  Id                 Int                  @id(map: "PK_ModulosEscritorio") @db.TinyInt
  Nombre             String               @db.NVarChar(50)
  NombreCodigo       String               @db.NVarChar(50)
  PermisosEscritorio PermisosEscritorio[]
}

model ModulosEspecialidad {
  Id               Int            @id(map: "PK_ModulosEspecialidad") @default(autoincrement()) @db.SmallInt
  IdPlanEstudios   Int            @db.SmallInt
  Clave            String?        @db.NVarChar(3)
  Nombre           String         @db.NVarChar(60)
  NombreCorto      String         @db.NVarChar(20)
  Creditos         Int            @db.TinyInt
  FechaInicio      DateTime       @db.Date
  FechaTerminacion DateTime       @db.Date
  ClaveOficial     String         @db.NVarChar(20)
  IdSituacion      Int            @db.TinyInt
  MateriasPlan     MateriasPlan[]
  PlanesEstudio    PlanesEstudio  @relation(fields: [IdPlanEstudios], references: [Id], map: "FK_ModulosEspecialidad_PlanesEstudio")
  Situacion        Situacion      @relation(fields: [IdSituacion], references: [Id], onUpdate: NoAction, map: "FK_ModulosEspecialidad_Situacion")
}

model Municipios {
  Id                        Int                         @id(map: "PK__Municipi__3214EC07B4EB2F9C") @default(autoincrement())
  Numero_Mpio               Int
  Estado_Id                 Int
  Nombre                    String                      @db.VarChar(120)
  DatosPersonalesAspirantes DatosPersonalesAspirantes[]
  Localidades               Localidades[]
  EstadosRepublica          EstadosRepublica            @relation(fields: [Estado_Id], references: [Id], onDelete: Cascade, map: "FK_Municipio_EstadoRepublica")
}

model NivelesEstudio {
  Id      Int       @id(map: "PK_NivelesEstudio") @default(autoincrement()) @db.TinyInt
  Nombre  String    @db.NVarChar(50)
  Carrera Carrera[]
}

model Notas {
  Clave String @id(map: "PK_Notas") @db.VarChar(20)
  Texto String @db.Text
}

model OpcionesAcreditacionAsignaturas {
  Id                                                                     Int           @id(map: "PK_OpcionesAcreditacionAsignaturas") @db.TinyInt
  Nombre                                                                 String        @db.NVarChar(30)
  Abreviatura                                                            String        @db.NVarChar(3)
  Disponible                                                             Boolean
  CargaAlumno_CargaAlumno_OpcionInicialToOpcionesAcreditacionAsignaturas CargaAlumno[] @relation("CargaAlumno_OpcionInicialToOpcionesAcreditacionAsignaturas")
  CargaAlumno_CargaAlumno_OpcionFinalToOpcionesAcreditacionAsignaturas   CargaAlumno[] @relation("CargaAlumno_OpcionFinalToOpcionesAcreditacionAsignaturas")
}

model OrigenVivienda {
  Id                     Int                      @id(map: "PK_OrigenVivienda") @db.TinyInt
  Nombre                 String                   @db.NVarChar(10)
  DatosPersonalesAlumnos DatosPersonalesAlumnos[]
}

model OtrasActividadesDocentes {
  Id                       Int                        @id(map: "PK_OtrasActividadesDocentes") @default(autoincrement()) @db.TinyInt
  Nombre                   String                     @db.NVarChar(60)
  NombreCorto              String                     @db.NChar(15)
  ActividadesApoyoDocentes ActividadesApoyoDocentes[]
  HorasApoyoDocentes       HorasApoyoDocentes[]
}

model PagosInscripciones {
  NumControl     Int
  IdPeriodo      Int            @db.SmallInt
  NoNominaCoteja Int
  FechaHora      DateTime       @db.DateTime
  Alumno         Alumno         @relation(fields: [NumControl], references: [NumControl], onUpdate: NoAction, map: "FK_PagosInscripciones_Alumno")
  Empleado       Empleado       @relation(fields: [NoNominaCoteja], references: [NoNomina], onUpdate: NoAction, map: "FK_PagosInscripciones_Empleado")
  PeriodoEscolar PeriodoEscolar @relation(fields: [IdPeriodo], references: [IdPerio], onUpdate: NoAction, map: "FK_PagosInscripciones_PeriodoEscolar")

  @@id([NumControl, IdPeriodo], map: "PK_PagosInscripciones")
}

model Parametros {
  Id    String @id(map: "PK__Parametr__3214EC076024F1FD") @db.VarChar(25)
  Valor String @db.VarChar(80)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Pb1 {
  idpb        Int
  descripcion String? @db.VarChar(50)

  @@ignore
}

model PeriodicidadPlanEstudios {
  Id            Int             @id(map: "PK_PeriodicidadPlanEstudios") @default(autoincrement()) @db.TinyInt
  Nombre        String          @db.NVarChar(50)
  PlanesEstudio PlanesEstudio[]
}

model PeriodoEscolar {
  IdPerio            Int                  @id(map: "PK__PeriodoE__FCCC0D04D2C7F9FD") @db.SmallInt
  Nombre             String               @db.NVarChar(25)
  NombreCorto        String               @db.NVarChar(10)
  Situaci_n          Boolean              @map("Situación")
  Inicio             DateTime?            @db.Date
  Fin                DateTime?            @db.Date
  InicioVacaciones   DateTime?            @db.Date
  FinVacaciones      DateTime?            @db.Date
  CuentasAspirantes  CuentasAspirantes[]
  Grupo              Grupo[]
  HorasApoyoDocentes HorasApoyoDocentes[]
  HorasDocente       HorasDocente[]
  PagosInscripciones PagosInscripciones[]
}

model PeriodoPagoSueldo {
  Id                                                                                         Int                      @id(map: "PK_PeriodoPagoSueldo") @db.TinyInt
  Nombre                                                                                     String                   @db.NVarChar(10)
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdPeriodoPagoSueldoPadreToPeriodoPagoSueldo  DatosPersonalesAlumnos[] @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoPadreToPeriodoPagoSueldo")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdPeriodoPagoSueldoMadreToPeriodoPagoSueldo  DatosPersonalesAlumnos[] @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoMadreToPeriodoPagoSueldo")
  DatosPersonalesAlumnos_DatosPersonalesAlumnos_IdPeriodoPagoSueldoAlumnoToPeriodoPagoSueldo DatosPersonalesAlumnos[] @relation("DatosPersonalesAlumnos_IdPeriodoPagoSueldoAlumnoToPeriodoPagoSueldo")
}

model PermisosEscritorio {
  IdRol             Int               @db.TinyInt
  IdModulo          Int               @db.TinyInt
  ModulosEscritorio ModulosEscritorio @relation(fields: [IdModulo], references: [Id], onUpdate: NoAction, map: "FK_PermisosEscritorio_ModulosEscritorio")
  RolesEscritorio   RolesEscritorio   @relation(fields: [IdRol], references: [Id], onUpdate: NoAction, map: "FK_PermisosEscritorio_RolesEscritorio")

  @@id([IdRol, IdModulo], map: "PK_PermisosEscritorio")
  @@index([IdRol], map: "IX_PermisosEscritorio")
}

model PlanesEstudio {
  Id                             Int                      @id(map: "PK_PlanesEstudio") @default(autoincrement()) @db.SmallInt
  IdCarrera                      Int                      @db.TinyInt
  ClaveOficial                   String                   @db.NVarChar(20)
  ClaveSimple                    String?                  @db.NVarChar(50)
  IdSituacion                    Int                      @db.TinyInt
  IdPeriodicidad                 Int                      @db.TinyInt
  IdSistemaAcreditacion          Int                      @db.TinyInt
  CreditosTotales                Int                      @db.SmallInt
  CreditosPlanReticular          Int                      @db.SmallInt
  CreditosEspecialidad           Int                      @db.SmallInt
  NumeroMaterias                 Int                      @db.TinyInt
  NumeroPeriodosDuracion         Int                      @db.TinyInt
  NumeroPeriodosMaximos          Int                      @db.TinyInt
  FechaInicio                    DateTime                 @db.Date
  FechaTerminacion               DateTime                 @db.Date
  CreditosMaximos1Reprobada      Int                      @db.TinyInt
  CreditosMaximos2OMasReprobadas Int                      @db.TinyInt
  CalificacionMinimaParcial      Float
  CalificacionMinimaFinal        Float
  CreditosCargaMinima            Int                      @db.TinyInt
  CreditosCargaMaxima            Int                      @db.TinyInt
  Alumno                         Alumno[]
  MateriasPlan                   MateriasPlan[]
  ModulosEspecialidad            ModulosEspecialidad[]
  Carrera                        Carrera                  @relation(fields: [IdCarrera], references: [IdCarre], onUpdate: NoAction, map: "FK_PlanesEstudio_Carrera")
  PeriodicidadPlanEstudios       PeriodicidadPlanEstudios @relation(fields: [IdPeriodicidad], references: [Id], onUpdate: NoAction, map: "FK_PlanesEstudio_PeriodicidadPlanEstudios")
  SistemasAcreditacion           SistemasAcreditacion     @relation(fields: [IdSistemaAcreditacion], references: [Id], onUpdate: NoAction, map: "FK_PlanesEstudio_SistemasAcreditacion")
  Situacion                      Situacion                @relation(fields: [IdSituacion], references: [Id], map: "FK_PlanesEstudio_Situacion")
}

model ProgramasBecas {
  Id                        Int                         @id(map: "PK__Programa__3214EC0767E5106A") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(50)
  DatosAcademicosAspirantes DatosAcademicosAspirantes[]
}

model ProyectosResidencias {
  Id                                                     Int                        @id(map: "PK_Proyectos")
  Nombre                                                 String?                    @db.NVarChar(100)
  Descripcion                                            String?                    @db.NVarChar(100)
  NumeroResidentes                                       Int?                       @db.TinyInt
  FechaInicio                                            DateTime?                  @db.Date
  FechaTerminacion                                       DateTime?                  @db.Date
  Horario                                                String?                    @db.NVarChar(40)
  IdPeriodo                                              Int?                       @db.SmallInt
  IdAsesorExterno                                        Int?
  IdAsesorInterno1                                       Int?
  IdAsesorInterno2                                       Int?
  AsesorExterno                                          AsesorExterno?             @relation(fields: [IdAsesorExterno], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proyectos_AsesorExterno")
  Docente_ProyectosResidencias_IdAsesorInterno1ToDocente Docente?                   @relation("ProyectosResidencias_IdAsesorInterno1ToDocente", fields: [IdAsesorInterno1], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proyectos_Docente")
  Docente_ProyectosResidencias_IdAsesorInterno2ToDocente Docente?                   @relation("ProyectosResidencias_IdAsesorInterno2ToDocente", fields: [IdAsesorInterno2], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK_Proyectos_Docente1")
  ResidenciasProfesionales                               ResidenciasProfesionales[]
}

model RepresentantesEmpresa {
  Id        Int      @id(map: "PK_AgentesEmpresas") @default(autoincrement())
  Nombre    String   @db.NVarChar(60)
  Grado     String   @db.NVarChar(10)
  Puesto    String   @db.NVarChar(40)
  IdEmpresa Int
  Email     String?  @db.NVarChar(80)
  Empresas  Empresas @relation(fields: [IdEmpresa], references: [Id], onUpdate: NoAction, map: "FK_AgentesEmpresas_Empresas")
}

model ResidenciasProfesionales {
  Id                   Int                  @id(map: "PK_Residencias")
  IdCarga              BigInt
  IdProyecto           Int
  CargaAlumno          CargaAlumno          @relation(fields: [IdCarga], references: [IdCarga], onUpdate: NoAction, map: "FK_Residencias_CargaAlumno")
  ProyectosResidencias ProyectosResidencias @relation(fields: [IdProyecto], references: [Id], onUpdate: NoAction, map: "FK_Residencias_Proyectos")
}

model RolesEscritorio {
  Id                 Int                  @id(map: "PK_RolesEscritorio") @default(autoincrement()) @db.TinyInt
  Nombre             String               @db.NVarChar(25)
  PermisosEscritorio PermisosEscritorio[]
  UsuariosEscritorio UsuariosEscritorio[]
}

model ServiciosMedicos {
  Id                        Int                         @id(map: "PK__Servicio__3214EC07A528C1E1") @default(autoincrement()) @db.TinyInt
  Nombre                    String                      @db.NVarChar(80)
  DatosPersonalesAlumnos    DatosPersonalesAlumnos[]
  DatosPersonalesAspirantes DatosPersonalesAspirantes[]
}

model SistemasAcreditacion {
  Id            Int             @id(map: "PK_SistemasAcreditacion") @default(autoincrement()) @db.TinyInt
  Nombre        String          @db.NVarChar(50)
  PlanesEstudio PlanesEstudio[]
}

model Situacion {
  Id                  Int                   @id(map: "PK_Situacion") @default(autoincrement()) @db.TinyInt
  Nombre              String                @db.NVarChar(50)
  EspaciosDeClase     EspaciosDeClase[]
  ModulosEspecialidad ModulosEspecialidad[]
  PlanesEstudio       PlanesEstudio[]
}

model SituacionAlumno {
  Id     Int    @id(map: "PK_SituacionAlumno") @db.TinyInt
  Nombre String @db.NVarChar(50)
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B6132213FD8") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model TipoPersona {
  IdTipo      Int           @id @default(autoincrement())
  Descripcion String        @db.VarChar(50)
  ControlAsis ControlAsis[]
  Vehiculo    Vehiculo[]
}

model TiposIngresoAlumno {
  Id     Int      @id(map: "PK_TipoIngresoAlumno") @db.TinyInt
  Nombre String   @db.NVarChar(25)
  Alumno Alumno[]
}

model tipoTransport {
  IdTpTransp  Int           @id @default(autoincrement())
  Nombre      String        @db.NVarChar(50)
  ControlAsis ControlAsis[]
}

model TipoVivienda {
  Id                     Int                      @id(map: "PK_TipoVivienda") @db.TinyInt
  Nombre                 String                   @db.NVarChar(15)
  DatosPersonalesAlumnos DatosPersonalesAlumnos[]
}

model UsuariosEscritorio {
  Id               Int                @id(map: "PK__Usuarios__3214EC0752E947EB") @default(autoincrement())
  Alias            String             @db.VarChar(30)
  IdEmpleado       Int
  IdRol            Int                @db.TinyInt
  ClaveAcceso      Bytes              @db.Binary(20)
  Estatus          Int                @db.SmallInt
  FichasAspirantes FichasAspirantes[]
  RolesEscritorio  RolesEscritorio    @relation(fields: [IdRol], references: [Id], onUpdate: NoAction, map: "FK_RolesEscritorio_UsuariosEscritorio")
  Empleado         Empleado           @relation(fields: [IdEmpleado], references: [NoNomina], onUpdate: NoAction, map: "FK_UsuariosEscritorio_Empleado")
}

model Vehiculo {
  IdVehiculo     Int              @id(map: "PK__Vehiculo__7086121537D67246") @default(autoincrement())
  Marca          String           @db.NVarChar(50)
  Modelo         String           @db.NVarChar(50)
  Color          String           @db.NVarChar(50)
  Placas         String           @db.NVarChar(50)
  Anio           Int
  idTipo         Int
  IdDoce         Int?
  idVisitante    Int?
  NumControl     Int?
  AutosAlumnos   AutosAlumnos[]
  AutosDoce      AutosDoce[]
  AutosVisitante AutosVisitante[]
  ControlAsis    ControlAsis[]
  Alumno         Alumno?          @relation(fields: [NumControl], references: [NumControl], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vehiculo_AutoAlumnos")
  Docente        Docente?         @relation(fields: [IdDoce], references: [IdDoce], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vehiculo_Docente")
  TipoPersona    TipoPersona      @relation(fields: [idTipo], references: [IdTipo], onUpdate: NoAction, map: "FK_Vehiculo_TipoPersona")
  Visitante      Visitante?       @relation(fields: [idVisitante], references: [idVisitante], onDelete: NoAction, onUpdate: NoAction, map: "FK_Vehiculo_Visitante")
}

model Visitante {
  idVisitante     Int              @id(map: "PK__Visitant__94665FDF97097EF1") @default(autoincrement())
  Nombre          String           @db.NVarChar(50)
  Ape_Mat         String           @db.NVarChar(25)
  Ape_Pa          String           @db.NVarChar(25)
  IdAsunto        Int
  Genero          String           @db.Char(1)
  FechaNacimiento DateTime?        @db.Date
  Direccion       String?          @db.NVarChar(100)
  Email           String?          @db.NVarChar(50)
  Telefono        String?          @db.NVarChar(20)
  AutosVisitante  AutosVisitante[]
  ControlAsis     ControlAsis[]
  Vehiculo        Vehiculo[]
  Asunto          Asunto           @relation(fields: [IdAsunto], references: [IdAsunto], onUpdate: NoAction, map: "FK_Visitante_Asunto")
}
